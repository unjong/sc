<UserControl x:Class="CsFormAnalyzer.Views.CodeConverterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:CsFormAnalyzer.Controls"
             xmlns:bh="clr-namespace:CsFormAnalyzer.Behaviours"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:regex="clr-namespace:System.Text.RegularExpressions;assembly=System"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Background="White"
             >
    <TabControl>
        <TabItem Header="Code Converter">
            <Grid bh:GridUtils.RowDefinitions="Auto,*" >
                <Expander Grid.Row="0" Header="Convert Dictionaries" MaxHeight="400">
                    <TabControl>
                        <TabItem Header="Binding">
                                <DataGrid ItemsSource="{Binding ConvertDictionaryByBinding}" SelectionUnit="Cell" CanUserAddRows="True" />
                            </TabItem>
                        <TabItem Header="ViewModel">
                            <Grid bh:GridUtils.ColumnDefinitions="*,Auto">
                                <c:ScDataGrid ItemsSource="{Binding ConvertDictionaryByDb}" CanUserAddRows="True" AutoGenerateColumns="False" CanUserDeleteRows="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Target" Binding="{Binding Path=Target}" Width="Auto">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="true" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Pattern" Binding="{Binding Path=Pattern}" Width="Auto">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="true" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Replacement" Binding="{Binding Path=Replacement}" Width="Auto">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="true" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </c:ScDataGrid>
                                <Button Grid.Column="1" Content="Update" VerticalAlignment="Bottom" Margin="4,0,0,0" 
                                    Command="{Binding UpdateDbConvertDictionaryCommand}" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="Pre" Visibility="Collapsed">
                            <DataGrid ItemsSource="{Binding ConvertDictionaryByPre}" SelectionUnit="Cell" CanUserAddRows="True" />
                        </TabItem>
                        <TabItem Header="Post" Visibility="Collapsed">
                            <DataGrid ItemsSource="{Binding ConvertDictionaryByPost}" SelectionUnit="Cell" CanUserAddRows="True" />
                            </TabItem>
                        <TabItem Header="Server">
                            <Grid bh:GridUtils.ColumnDefinitions="*,Auto">
                                <c:ScDataGrid ItemsSource="{Binding ConvertDictionaryByDbForServer}" CanUserAddRows="True" AutoGenerateColumns="False" CanUserDeleteRows="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Target" Binding="{Binding Path=Target}" Width="Auto">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="true" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Pattern" Binding="{Binding Path=Pattern}" Width="Auto">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="true" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Replacement" Binding="{Binding Path=Replacement}" Width="Auto">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                            <DataGridTextColumn.EditingElementStyle>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="AcceptsReturn" Value="true" />
                                                </Style>
                                            </DataGridTextColumn.EditingElementStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </c:ScDataGrid>
                                <Button Grid.Column="1" Content="Update" VerticalAlignment="Bottom" Margin="4,0,0,0" 
                                    Command="{Binding UpdateDbConvertDictionaryCommand}" />
                            </Grid>
                        </TabItem>                        
                        </TabControl>
                </Expander>
                <Grid Grid.Row="1" bh:GridUtils.RowDefinitions="Auto,*">
                    <StackPanel Grid.Row="0" HorizontalAlignment="Right" >
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource H3}" Text="Convert Type : " VerticalAlignment="Center" />
                            <RadioButton Content="ViewModel" IsChecked="{Binding ConvertType, Converter={StaticResource StringToBoolByParamConverter}, ConverterParameter=ViewModel}" VerticalAlignment="Center" />
                            <RadioButton Content="Server" IsChecked="{Binding ConvertType, Converter={StaticResource StringToBoolByParamConverter}, ConverterParameter=Server}" VerticalAlignment="Center" Margin="4,0,0,0" />                            
                        </StackPanel>
                        <TextBlock Text="{Binding ConvertType, StringFormat='\{0\} 코드를 생성합니다.'}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                    </StackPanel>
                    <Grid Grid.Row="1" bh:GridUtils.ColumnDefinitions="*,Auto,*" Margin="0,4,0,0">
                        <GroupBox Grid.Column="0" Header="SAF 2.0 Code" >
                            <avalonEdit:TextEditor bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding OriginalCode}"
                                       FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                        </GroupBox>
                        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="C83D7AB3-9BC7-49E3-9C70-381C640D28AB" Background="Transparent" />
                        <Button Grid.Column="1" FontFamily="{StaticResource SegoeUISymbol}" Content="&#xE0AE;" MinWidth="0" Padding="4,20" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding RunCommand}" />
                        <GroupBox Grid.Column="2" Header="SAF 3.0 Code" >
                            <avalonEdit:TextEditor bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding ResultCode}" 
                                       FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                        </GroupBox>
                    </Grid>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Regex Tool">
            <Grid bh:GridUtils.ColumnDefinitions="Auto,4,*">
                <Label Grid.Column="0" Content="Select Regex :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <ListBox Grid.Column="0" ItemsSource="{Binding RegexList}" Margin="0,22,0,25" SelectedItem="{Binding SelectedRegexToolItem}">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding RemoveRegexItemCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
                    </ListBox.InputBindings>
                </ListBox>
                <Button Grid.Column="0" Command="{Binding UpdateRegexListCommand}" Content="Update" VerticalAlignment="Bottom" />

                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="CC5D38FF-9E56-4F84-9422-A2EA9F47BF55" Margin="0,22,0,0"/>
                
                <Grid Grid.Column="2" bh:GridUtils.RowDefinitions="2*,4,4*,4,4*">

                    <Grid Grid.Row="0" bh:GridUtils.ColumnDefinitions="*,Auto">
                        <Grid bh:GridUtils.RowDefinitions="5*,5*,Auto" >
                            <Label Grid.Row="0" Content="Search Regular Expression :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <TextBox Grid.Row="0" AcceptsReturn="True" Margin="0,22,0,0" 
                                 x:Name="txtExpression" Text="{Binding Expression, UpdateSourceTrigger=PropertyChanged}" />

                            <Label Grid.Row="1" Content="Replace Regular Expression :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <TextBox Grid.Row="1" AcceptsReturn="True" Margin="0,22,0,0" 
                                 x:Name="txtReplaceRegex" Text="{Binding ReplaceRegex, UpdateSourceTrigger=PropertyChanged}" />

                            <Label Grid.Row="2" Content="Description :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <TextBox Grid.Row="2" AcceptsReturn="True" Margin="0,22,0,0" 
                                 Text="{Binding RegexDescription}" />
                        </Grid>

                        <DockPanel Grid.Column="1" Margin="4,4,0,0" Width="150">
                            <Button DockPanel.Dock="Bottom" Content="Add to list" Command="{Binding AddToListCommand}" />
                            <StackPanel>
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.None}}" Content="None" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.IgnoreCase}}" Content="IgnoreCase" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.Multiline}}" Content="Multiline" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.ExplicitCapture}}" Content="ExplicitCapture" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.Compiled}}" Content="Compiled" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.Singleline}}" Content="Singleline" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.IgnorePatternWhitespace}}" Content="IgnorePatternWhitespace" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.RightToLeft}}" Content="RightToLeft" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.ECMAScript}}" Content="ECMAScript" />
                                <CheckBox IsChecked="{Binding Path=RegexOptions, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static regex:RegexOptions.CultureInvariant}}" Content="CultureInvariant" />
                            </StackPanel>
                        </DockPanel>
                    </Grid>

                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="AFBB8ED0-F20E-44B1-9927-80D35788EB98" />
                    
                    <Label Grid.Row="2" Content="Text :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <!--<TextBox Grid.Row="2" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" Margin="0,22,0,0" />-->
                    <avalonEdit:TextEditor Grid.Row="2" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding Text, UpdateSourceTrigger=PropertyChanged}"                                   
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                    
                    <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="AFBB8ED0-F20E-44B1-9927-80D35788EB98" />

                    <Label Grid.Row="4" Content="Match result :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <!--<TextBox Grid.Row="4" Text="{Binding MatchResult}" AcceptsReturn="True" Margin="0,22,0,0" />-->
                    <Grid Grid.Row="4" Margin="0,22,0,0" bh:GridUtils.ColumnDefinitions="7*,4,3*" >
                        <TabControl Grid.Column="0" >
                            <TabItem Header="Result">
                                <avalonEdit:TextEditor bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding MatchResult}"
                                           FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                            </TabItem>
                            <TabItem Header="Capture Only">
                                <avalonEdit:TextEditor bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding CaptureOnly}"
                                           FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                            </TabItem>                            
                        </TabControl>
                        
                        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="90769B07-0E0C-41D4-9258-1177C282CDD6" />
                        
                        <TabControl Grid.Column="2">
                            <TabItem Header="Capture">
                                <avalonEdit:TextEditor Grid.Column="2" bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding MatchGroups}"
                                           FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                            </TabItem>
                            <TabItem Header="Capture Groups">
                                <avalonEdit:TextEditor Grid.Column="2" bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding CaptureGroups}"
                                           FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />                                
                            </TabItem>
                        </TabControl>
                    </Grid>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Match by Index">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="As-Is :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <avalonEdit:TextEditor Grid.Column="0" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding IndexMatchAsis}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />

                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="E77A2BF4-6334-4CE5-80CD-48DE699D98E2" />

                <Label Grid.Column="2" Content="Names :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <avalonEdit:TextEditor Grid.Column="2" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding IndexMatchNames}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />

                <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="E77A2BF4-6334-4CE5-80CD-48DE699D98E2" />
                
                <Label Grid.Column="4" Content="To-Be :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <avalonEdit:TextEditor Grid.Column="4" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding IndexMatchTobe}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
            </Grid>
        </TabItem>
        <TabItem Header="Splitter">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="5*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="As-Is :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <avalonEdit:TextEditor Grid.Column="0" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding SplitterAsis}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />

                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="55800AE7-3C60-4E67-8088-2867ADFF2F40" />
                                
                <Label Grid.Column="2" Content="To-Be :" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <StackPanel Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal" Height="22">
                    <TextBlock Text="Prefix :" VerticalAlignment="Center" />
                    <RadioButton Content="none" VerticalAlignment="Center" Margin="4,0,0,0" 
                                 IsChecked="{Binding Prefix, Converter={StaticResource StringToBoolByParamConverter}, ConverterParameter=''}" />
                    <RadioButton Content="p" VerticalAlignment="Center" Margin="4,0,0,0" 
                                 IsChecked="{Binding Prefix, Converter={StaticResource StringToBoolByParamConverter}, ConverterParameter=p}" />
                    <RadioButton Content="item" VerticalAlignment="Center" Margin="4,0,0,0" 
                                 IsChecked="{Binding Prefix, Converter={StaticResource StringToBoolByParamConverter}, ConverterParameter=item.}" />
                </StackPanel>
                <avalonEdit:TextEditor Grid.Column="2" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding SplitterTobe}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
            </Grid>
        </TabItem>
        <TabItem Header="UserWork">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Select UserWork Item" Style="{StaticResource H3}" />
                <ListBox Grid.Column="0" Margin="0,22,0,0" ItemsSource="{Binding UserWorks}" SelectedItem="{Binding SelectedUserWork}" />

                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="CA88E4B0-FC48-43AE-9EF5-67D408A9E686" />

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5*" />
                        <RowDefinition Height="4" />
                        <RowDefinition Height="5*" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="Code" Style="{StaticResource H3}" />
                    <avalonEdit:TextEditor Grid.Row="0" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding UserWorkInput}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                    
                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" bh:StateRestoreBehavior.GridSplitter="D47F6085-66C2-4ADF-B9AF-B3BFFA86757F" />

                    <TextBlock Grid.Row="2" Text="Result" Style="{StaticResource H3}" />
                    <avalonEdit:TextEditor Grid.Row="2" Margin="0,22,0,0" 
                                   bh:BindAssist.Attach="True" bh:BindAssist.Bind="{Binding UserWorkOutput}"
                                   FontFamily="Consolas" FontSize="10pt" ShowLineNumbers="True" SyntaxHighlighting="C#" />
                </Grid>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>
